@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model ReplyViewModel;
@{
    string loggedUserName = User.Claims.FirstOrDefault(claim => claim.Type == "Username").Value;
}

<div class="reply-details flex-row">
    <div class="card border-0 bg-dark text-white">
        <div class="card-header border-0">
            <div class="reply-author">
                <span>Author: </span>
                <a asp-controller="Users" asp-action="Profile" asp-route-id="@Model.Author.UserName">@Model.Author.UserName</a>
            </div>
            <div class="reply-dates">
                <div>Created on: @Model.CreationDate</div>
                <div>
                    Last modified:
                    @if (Model.ModificationDate == DateTime.MinValue)
                    {
                        <span>Never</span>
                    }
                    else
                    {
                        <span>@Model.ModificationDate</span>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="card border-0 bg-dark text-white flex-row">
        <div class="votes">
            <a class="upvote-symbol" asp-action="UpVote" asp-route-id="@Model.Id">⨇</a>
            @{
                string upvoteLinkText = "";
                if (Model.Likes.Any(v => v.VoterUsername == loggedUserName))
                {
                    switch (Model.Likes.Count)
                    {
                        case 1:
                            upvoteLinkText = "You";
                            break;
                        case 2:
                            upvoteLinkText = "You, 1 other";
                            break;
                        default:
                            upvoteLinkText = "You, " + (Model.Likes.Count - 1).ToString() + " others";
                            break;
                    }
                }
                else
                {
                    upvoteLinkText = Model.Likes.Count.ToString();
                }
                <div>@upvoteLinkText</div>
            }
        </div>
        <div class="votes">
            <a class="downvote-symbol" asp-action="DownVote" asp-route-id="@Model.Id">⨈</a>
            @{
                string downvoteLinkText = "";

                if (Model.Dislikes.Any(v => v.VoterUsername == loggedUserName))
                {
                    switch (Model.Dislikes.Count)
                    {
                        case 1:
                            downvoteLinkText = "You";
                            break;
                        case 2:
                            downvoteLinkText = "You, 1 other";
                            break;
                        default:
                            downvoteLinkText = "You, " + (Model.Dislikes.Count - 1).ToString() + " others";
                            break;
                    }
                }
                else
                {
                    downvoteLinkText = Model.Dislikes.Count.ToString();
                }
                <div>@downvoteLinkText</div>
            }
        </div>
    </div>
</div>