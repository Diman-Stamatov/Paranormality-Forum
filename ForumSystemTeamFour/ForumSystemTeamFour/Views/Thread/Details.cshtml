@using ForumSystemTeamFour.Models.Enums;
@model ThreadDetailsVM

@{
	bool loggedIn = User.Identity.IsAuthenticated;
	bool isAdmin = false;
	string loggedUser = "anonymous";
	if (loggedIn)
	{
		loggedUser = User.Claims.FirstOrDefault(claim => claim.Type == "Username").Value;
		isAdmin = User.Claims.FirstOrDefault(claim => claim.Type == "IsAdmin").Value == "True";
	}
	

	var sortParameters = new List<string> { "Username", "CreationDate", "Likes", "Dislikes" };
	var sortOptions = new SelectList(sortParameters);
	var orderParameters = new List<string> { "Ascending", "Descending" }; 
	var orderOptions = new SelectList(orderParameters);

	this.ViewData["Title"] = Model.Thread.Title;

	int threadId = Model.Thread.Id;
	string threadAuthor = Model.Thread.Author.Username;
	string threadTitle = Model.Thread.Title;
	string threadCreationDate = Model.Thread.CreationDate.ToString("g");
	string threadContent = Model.Thread.Content;
	bool threadWasEdited = Model.Thread.ModificationDate != DateTime.MinValue;
	int threadLikes = Model.Thread.Votes.Where(vote => vote.VoteType == "Like").Count();
	int threadDislikes = Model.Thread.Votes.Where(vote => vote.VoteType == "Dislike").Count();
	int threadAuthorPosts = Model.Thread.Author.TotalPosts;

	string profilePicDirectory = "wwwroot/ProfilePictures";
	bool hasThreadPic = Directory.EnumerateFiles(profilePicDirectory, $"{threadAuthor}*").Any();
	var directory = new DirectoryInfo(@"wwwroot/ProfilePictures");
	var threadFileInfo = directory.GetFiles("*" + threadAuthor + "*.*");
	string threadPicName = hasThreadPic ? $"{threadFileInfo[0].Name}" : "default.jpg";
}
<script>
	document.addEventListener("DOMContentLoaded", function (event) {
		var scrollpos = sessionStorage.getItem('scrollpos');
		if (scrollpos) window.scrollTo(0, scrollpos);
		sessionStorage.removeItem('scrollpos');
	});

	window.onbeforeunload = function (e) {
		sessionStorage.setItem('scrollpos', window.scrollY);
	};
</script>

<style>
	html, body {
		max-width: 100%;
		overflow-x: hidden;
	}
	
	.threadTable {
		width: 100%;
		height: auto;
		background-color: #3D3635;
		border: 3px solid black;
		border-radius: 10px;
	}

	.threadTable td {
		border: 2px solid black;
	}

	.postTable {
		width: 100%;
		height: auto;
		background-color: #232323;
		border: 3px solid black;
		border-radius: 10px;
	}

		.postTable td {
			border: 2px solid black;
		}
</style>

@if (!loggedIn)
{
	<div style="position:fixed;top:5%;right:5%;">
		<div>
			<a asp-controller="Users" asp-action="Register"
			   type="button" class="btn appBtn-outline" style="margin-bottom: 5px;text-decoration:none">Register</a>
		</div>
		<div>
			<a asp-controller="Users" asp-action="Login"
			   type="button" class="btn appBtn-outline" style="text-decoration:none">Login</a>
		</div>
	</div>
}


<form asp-controller="Thread" asp-action="Details" method="post" style="float:right">	
	<table style="text-align:left;">	
		<tbody style="font-size:0.8vw">

			<tr>
				<input asp-for="QueryParameters.ThreadId" id="" type="number" value="@Model.Thread.Id" hidden>
				<td style="color: #FFFF33;text-align:center">
					@if (ViewData["ErrorMessage"] != null)
					{
						@ViewData["ErrorMessage"]
						;
						<br />
					}
				</td>
				<td>
					<label asp-for="QueryParameters.UserName">By author:</label><br>
					<input asp-for="QueryParameters.UserName" type="text" value="@Model.QueryParameters.UserName" placeholder="Mulder">
				</td>

				<td>
					<label asp-for="QueryParameters.CreatedAfter">Created after:</label><br>
					<input asp-for="QueryParameters.CreatedAfter" type="text" value="@Model.QueryParameters.CreatedAfter" placeholder="06.06.2006">
				</td>

				<td>
					<label asp-for="QueryParameters.CreatedBefore">Created before:</label><br>
					<input asp-for="QueryParameters.CreatedBefore" type="text" value="@Model.QueryParameters.CreatedBefore" placeholder="06.06.2006">
				</td>

				<td>
					<label asp-for="QueryParameters.SortBy">Order by:</label><br>
					<select asp-items="@sortOptions" asp-for="QueryParameters.SortBy"></select>
				</td>

				<td>
					<label asp-for="QueryParameters.SortOrder">Sort by:</label><br>
					<select asp-items="@orderOptions" asp-for="QueryParameters.SortOrder"></select>
				</td>
				<td>
					<input type="submit" value="Filter replies"
						   class="btn appBtn-outline" style="text-decoration:none; padding:3px; display:flex;align-items:center">
				</td>

			</tr>
		</tbody>
	</table>
</form> 

@*//Thread*@
<table class="threadTable">
	<tbody>
		<tr>
			<td style="width:8vw;">
				<div style="font-size:14px">Author:</div>
				@{
					if (loggedIn)
					{
						<div><a asp-controller="Users" asp-action="Profile" asp-route-id="@threadAuthor" style="font-size:16px; text-decoration:none">@threadAuthor</a></div>
					}
					else
					{
						<div style="font-size:16px">@threadAuthor</div>
					}
				}
				
			</td>
			<td>
				<div style="font-size:22px;padding-top:10px;">@threadTitle</div>
				<div style="text-align:right; font-size:12px; padding-right:20px">
					Posted: @threadCreationDate
				</div>
			</td>
		</tr>

		<tr>
			<td style="vertical-align:top; padding-top:20px">
				<div>
					<img style="width:100px;height:100px;vertical-align:top"
						 src="/ProfilePictures/@threadPicName"/>
				</div>
				<div>
					Posts: @threadAuthorPosts
				</div>
			</td>
			<td  style="text-align:justify; padding:30px">@threadContent</td>
		</tr>

		<tr>
			<td>
				
			</td>
			<td>
				<div style="float:left; padding-left:10px;">
					@if (!loggedIn)
							{
								<div style=" float:left; padding-left:5px;">
									<div style="display: inline-block; color:limegreen">⨇</div>
							<div style="display: inline-block;">@threadLikes</div>
									<div style="display: inline-block; color:red">⨈</div>
									<div style="display: inline-block;">@threadDislikes</div>
								</div>
					}
					else
					{
						<div class="card border-0 text-white flex-row" style="background-color:#3D3635">
						<div class="votes">
							<a class="upvote-symbol" asp-controller="Thread" asp-action="UpVote" asp-route-id="@Model.Thread.Id" asp-route-threadId="@threadId">⨇</a>
							@{
								if (Model.Thread.Votes.Where(vote=>vote.VoteType == "Like").Any(v => v.VoterUsername == loggedUser))
								{
									<div>You </div>
									if (threadLikes == 2)
									{
										<span>, 1 other</span>
									}
									else if (threadLikes > 2)
									{
										<span>, @(threadLikes - 1) others</span>
									}
								}
								else
								{
									<div>@threadLikes</div>
								}
							}
						</div>
						<div class="votes">
							<a class="downvote-symbol" asp-controller="Thread" asp-action="DownVote" asp-route-id="@Model.Thread.Id" asp-route-threadId="@threadId">⨈</a>
							@{
								if (Model.Thread.Votes.Where(vote => vote.VoteType == "Dislike").Any(v => v.VoterUsername == loggedUser))
								{
									<span>You </span>
									if (threadDislikes == 2)
									{
										<span>, 1 other</span>
									}
									else if (threadDislikes > 2)
									{
										<span>, @(threadDislikes - 1) others</span>
									}
								}
								else
								{
									<div>@threadDislikes</div>
								}
							}
						</div>
					</div>
					}
				</div>				
				@{
					if (threadWasEdited)
					{
						<div style="text-align:left; float:right">Edited on: @Model.Thread.ModificationDate.ToString("g")</div>
					}
				}
				<div style="float:right">
					@{
						if (loggedIn)
						{
							<a asp-controller="Replies" asp-action="Create" asp-route-id="@threadId"
					   type="button" class="btn appBtnReply-outline appBtn-outline" style="text-decoration:none; padding-top:0px; padding-bottom:1px; margin-right:5px;">Post reply</a>
						}
						if (loggedUser == Model.Thread.Author.Username.ToString())
						{
							<a asp-controller="Replies" asp-action="Edit" asp-route-id="@Model.Thread.Id"
					   type="button" class="btn appBtnReply-outline appBtn-outline" style="text-decoration:none; padding-top:0px; padding-bottom:1px; margin-right:5px;">Edit</a>
						}
					}

				</div>
			</td>
		</tr>

		<tr border="none">
			<td colspan="2" style="background-color:black;height:5px"></td>
			
		</tr>

	</tbody>
</table> 
@{
	//Replies
	foreach (var reply in Model.Thread.Replies)
	{
		int replyId = reply.Id;
		string replyAuthor = reply.Author.UserName;
		string replyCreationDate = reply.CreationDate.ToString("g");
		string replyContent = reply.Content;
		bool replyWasEdited = reply.ModificationDate != DateTime.MinValue;		
		int replyAuthorPosts = reply.Author.TotalPosts;

		bool hasReplyPic = Directory.EnumerateFiles(profilePicDirectory, $"{replyAuthor}*").Any();
		var replydFileInfo = directory.GetFiles("*" + replyAuthor + "*.*");
		string replyPicName = hasReplyPic ? $"{replydFileInfo[0].Name}" : "default.jpg";

		<table class="postTable" style="width:100%">
			<tbody>
				<tr>
					<td style="width:8vw;">
						<div style="font-size:14px">Author:</div>
						@{
							if (loggedIn)
							{
								<div><a asp-controller="Users" asp-action="Profile" asp-route-id="@replyAuthor" style="font-size:16px; text-decoration:none">@replyAuthor</a></div>
							}
							else
							{
								<div style="font-size:16px">@replyAuthor</div>
							}
						}

					</td>
					<td>
						<div style="font-size:12px;float:left;">Re: @threadTitle</div>
						<div style="float:right; font-size:12px;padding-right:20px">
							Posted: @replyCreationDate
						</div>
					</td>
				</tr>

				<tr>
					<td style="vertical-align:top; padding-top:20px">
						<div>
							<img style="width:100px;height:100px;vertical-align:top"
								 src="/ProfilePictures/@replyPicName" />
						</div>
						<div>
							Posts: @replyAuthorPosts
						</div>
					</td>
					<td style="text-align:justify; padding:30px">@replyContent</td>
				</tr>

				<tr>
					<td>
						<a href="#top" style="float:left; padding-left:20px;text-decoration:none; font-size:14px">Top</a>
					</td>
					<td>
						<div style="float:left; padding-left:10px;">
						@if (!loggedIn)
							{
								<div style=" float:left; padding-left:5px;">
									<div style="display: inline-block; color:limegreen">⨇</div>
									<div style="display: inline-block;">@reply.Likes.Count</div>
									<div style="display: inline-block; color:red">⨈</div>
									<div style="display: inline-block;">@reply.Dislikes.Count</div>
								</div>
							}
							else
							{
								<div class="card border-0 bg-dark text-white flex-row">
									<div class="votes">
										<a class="upvote-symbol" asp-controller="Replies" asp-action="UpVote" asp-route-id="@reply.Id" asp-route-threadId="@threadId">⨇</a>
										@{
											if (reply.Likes.Any(v => v.VoterUsername == loggedUser))
											{
												<div>You </div>
												if (reply.Likes.Count == 2)
												{
													<span>, 1 other</span>
												}
												else if (reply.Likes.Count > 2)
												{
													<span>, @(reply.Likes.Count - 1) others</span>
												}
											}
											else
											{
												<div>@reply.Likes.Count</div>
											}
										}
									</div>
									<div class="votes">
										<a class="downvote-symbol" asp-controller="Replies" asp-action="DownVote" asp-route-id="@reply.Id" asp-route-threadId="@threadId">⨈</a>
										@{
											if (reply.Dislikes.Any(v => v.VoterUsername == loggedUser))
											{
												<span>You </span>
												if (reply.Dislikes.Count == 2)
												{
													<span>, 1 other</span>
												}
												else if (reply.Dislikes.Count > 2)
												{
													<span>, @(reply.Dislikes.Count - 1) others</span>
												}
											}
											else
											{
												<div>@reply.Dislikes.Count</div>
											}
										}
									</div>
								</div>
							}
							
						</div >
						@{
							if (replyWasEdited)
							{
								<div style="text-align:left; font-size:12px; float:right; vertical-align:central">Edited on: @reply.ModificationDate.ToString("g")</div>
							}
						}
						<div style="float:right">
							@{
								if (loggedIn)
								{
									<a asp-controller="Replies" asp-action="Create" asp-route-id="@threadId" 
									   type="button" class="btn appBtnReply-outline appBtn-outline" style="text-decoration:none; padding-top:0px; padding-bottom:1px; margin-right:5px;">Post reply</a>
								}
								if (loggedUser == replyAuthor)
								{
									<a asp-controller="Replies" asp-action="Edit" asp-route-id="@replyId"
									   type="button" class="btn appBtnReply-outline appBtn-outline" style="text-decoration:none; padding-top:0px; padding-bottom:1px; margin-right:5px;">Edit</a>
								}
								if (loggedUser == replyAuthor || isAdmin)
								{
									<a asp-controller="Replies" asp-action="Delete" asp-route-id="@replyId"
									   type="button" class="btn appBtnReply-outline appBtn-outline" style="text-decoration:none; padding-top:0px; padding-bottom:1px; margin-right:5px;">Delete</a>
								}
							}

						</div>
					</td>
				</tr>

				<tr border="none">
					<td colspan="2" style="background-color:black;height:5px"></td>

				</tr>

			</tbody>
		</table>
	}
}